from openai import OpenAI
import streamlit as st
import pyperclip
from supabase import create_client, Client
from dotenv import load_dotenv
import os
# Load API key t·ª´ file .env
load_dotenv()
#openai.api_key = os.getenv("OPENAI_API_KEY")
# S·ª≠ d·ª•ng OpenAI API Key t·ª´ secrets c·ªßa Streamlit
OPENAI_API_KEY = st.secrets["OPENAI_API_KEY"]

# Kh·ªüi t·∫°o client OpenAI v·ªõi API key (s·ª≠ d·ª•ng client nh∆∞ y√™u c·∫ßu)
# Khai b√°o client cho OpenAI
openai.api_key = OPENAI_API_KEY
client = openai  # ƒë·ªìng b·ªô ƒë·∫∑t t√™n

# K·∫øt n·ªëi Supabase
SUPABASE_URL = st.secrets["SUPABASE_URL"]
SUPABASE_KEY = st.secrets["SUPABASE_KEY"]

supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)



def create_lyrics():
    
    def generate_lyrics(prompt):
        """G·ª≠i prompt ƒë·∫øn OpenAI API ƒë·ªÉ t·∫°o l·ªùi b√†i h√°t"""
        try:
            response = client.chat.completions.create(
                model="gpt-4o",  # Ho·∫∑c "gpt-3.5-turbo" n·∫øu t√†i kho·∫£n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p GPT-4
                messages=[
                    {"role": "system", "content": "B·∫°n l√† m·ªôt nh·∫°c sƒ© s√°ng t√°c l·ªùi b√†i h√°t chuy√™n nghi·ªáp."},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.9,
                max_tokens=900
            )

            # ‚úÖ L·∫•y n·ªôi dung ph·∫£n h·ªìi ƒë√∫ng c√°ch
            return response.choices[0].message.content  

        except Exception as e:
            return f"‚ö†Ô∏è L·ªói khi t·∫°o l·ªùi b√†i h√°t: {str(e)}"

    st.markdown("<h1>üé∂ AI Lyric Generator üéµ</h1>", unsafe_allow_html=True)
    col1, col2 = st.columns([3, 5])
    with col1:
        # Ng∆∞·ªùi d√πng nh·∫≠p th·ªÉ lo·∫°i nh·∫°c v√† ch·ªß ƒë·ªÅ
        genre = st.text_area("üéº Ch·ªçn th·ªÉ lo·∫°i nh·∫°c: ",
                            placeholder="Pop, Rock, Hip-Hop, Jazz, Ballad, EDM,....")
        mood = st.text_area("üé≠ Ch·ªçn c·∫£m x√∫c: ",
                            placeholder="Vui v·∫ª, Bu·ªìn, H√†o h·ª©ng, Th∆∞ gi√£n, K·ªãch ,....")
        theme = st.text_area("‚úçÔ∏è M√¥ t·∫£ b·∫£n nh·∫°c b·∫°n mu·ªën t·∫°o:",
                            placeholder="T√¨nh y√™u, M√πa thu, Tu·ªïi tr·∫ª, ...")
        if "lyrics_input" in st.session_state:
            lyrics = st.session_state.lyrics_input
        else:
            lyrics = ""
        if st.button("üé§ S√°ng t√°c ngay!"):
            if theme.strip():
                with st.spinner("üé∂ AI ƒëang s√°ng t√°c l·ªùi b√†i h√°t cho b·∫°n..."):
                    prompt = f"H√£y vi·∫øt l·ªùi b√†i h√°t th·ªÉ lo·∫°i {genre} v·ªÅ ch·ªß ƒë·ªÅ '{theme}', v·ªõi c·∫£m x√∫c {mood}."
                    lyrics = generate_lyrics(prompt)
            else:
                st.warning("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ch·ªß ƒë·ªÅ b√†i h√°t tr∆∞·ªõc khi t·∫°o!")
    with col2:
    # Hi·ªÉn th·ªã text_area v√† l∆∞u gi√° tr·ªã tr·ª±c ti·∫øp v√†o lyrics    
        lyrics_input = st.text_area("üéº L·ªùi b√†i h√°t AI t·∫°o:", lyrics, height=370)
    # Ki·ªÉm tra n·∫øu n·ªôi dung text_area thay ƒë·ªïi v√† t·ª± ƒë·ªông sao ch√©p v√†o clipboard
        st.session_state.lyrics_input = lyrics
    
        if st.button("Copy Lyrics"):
                # pyperclip.copy(lyrics_input)  # Sao ch√©p lyrics v√†o clipboard
                lyrics = lyrics_input
                st.session_state.lyrics = lyrics
                st.success("Lyrics have been copied to clipboard and Feel The Beat")  # Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng

    if lyrics_input != lyrics:
        lyrics = lyrics_input
        st.session_state.lyrics_input = lyrics
